{"version":3,"sources":["images/Resume_400x400.png","components/SideNav/SideNav.js","components/About/About.js","components/SkillCard/SkillCard.js","components/Skills/Skills.js","components/ProjectCard/ProjectCard.js","components/Projects/Projects.js","components/ExperienceCard/ExperienceCard.js","components/Experience/Experiences.js","components/SectionContainer/SectionContainer.js","components/Portfolio/Portfolio.js","constants/About.js","constants/Skills.js","constants/Projects.js","constants/Experiences.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","SideNav","handleSectionClick","className","src","displayPicture","alt","onClick","About","bio","SkillCard","skill","Skills","skills","industryKnowledge","map","languages","techSkills","interpersonalSkills","ProjectCard","project","name","description","href","link","Projects","projects","projectList","ExperienceCard","experience","companyName","role","about","split","res","Experiences","experiences","experienceList","SectionContainer","selectedHeading","selectedQuote","selectedSection","Portfolio","heading","quote","App","section","setState","state","this","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b8fa884f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Resume_400x400.0cbf9de0.png\";","import React from 'react';\nimport displayPicture from \"./../../images/Resume_400x400.png\"\nimport './SideNav.css';\n\nexport const SideNav = ({ handleSectionClick }) => {\n    return (\n        <div className=\"sidenav\">\n            <img\n                src={displayPicture}\n                className=\"avatar\"\n                alt=\"avatar\"\n            />\n            <h2 className=\"main-name\">Dhiren Paryani</h2>\n            <p className=\"subtitle\">\"A Cadet Who Codes\"</p>\n            <div className=\"sections-list\">\n                <p className=\"section-list-element\" onClick={() => handleSectionClick(\"about\")}>About Me</p>\n                <p className=\"section-list-element\" onClick={() => handleSectionClick(\"skills\")}>Skills</p>\n                <p className=\"section-list-element\" onClick={() => handleSectionClick(\"projects\")}>Projects</p>\n                <p className=\"section-list-element\" onClick={() => handleSectionClick(\"experiences\")}>Experiences</p>\n\n            </div>\n        </div>\n    );\n};","import React from 'react';\n\nimport './about.css';\n\nexport const About = ({ bio }) => {\n    return (\n        <div className=\"about-container\">\n            <p>{bio}</p>\n        </div>\n    )\n}","import React from 'react';\n\nimport './skill-card.css';\n\nexport const SkillCard = ({ skill }) => {\n    return (\n        <div className=\"skill-card\">\n            {skill}\n        </div>\n    )\n}","import React from 'react';\n\nimport { SkillCard } from './../SkillCard/SkillCard';\n\nimport './skills.css';\n\nexport const Skills = ({ skills }) => {\n    return (\n        <div className=\"skills-container\">\n            <h3>Industry Knowledge</h3>\n            <div className=\"industry-skill-container\">\n                {\n                    skills.industryKnowledge.map(skill => <SkillCard skill={skill} />)\n                }\n            </div>\n            <h3>Programming Languages</h3>\n            <div className=\"industry-skill-container\">\n                {\n                    skills.languages.map(skill => <SkillCard skill={skill} />)\n                }\n            </div>\n            <h3>Tools/Frameworks/Libraries</h3>\n            <div className=\"industry-skill-container\">\n                {\n                    skills.techSkills.map(skill => <SkillCard skill={skill} />)\n                }\n            </div>\n            <h3>Interpersonal Skills</h3>\n            <div className=\"industry-skill-container\">\n                {\n                    skills.interpersonalSkills.map(skill => <SkillCard skill={skill} />)\n                }\n            </div>\n            \n        </div>\n    )\n}","import React from 'react'\n\nimport './projectcard.css';\n\nexport const ProjectCard = ({ project }) => {\n    return (\n        <div className=\"project-card\">\n            <p><b>Name:</b> {project.name}</p>\n            <p><b>Description:</b> {project.description}</p>\n            <p><b>Link:</b> <a href={project.link}>{project.link}</a> </p>\n        </div>\n    )\n}","import React from 'react';\n\nimport { ProjectCard } from './../ProjectCard/ProjectCard';\n\n\nexport const Projects = ({ projects }) => {\n    return (\n        <div className=\"projects-container\">\n            <div className=\"industry-skill-container\">\n                {\n                    projects.projectList.map(project => <ProjectCard project={project} />)\n                }\n            </div>\n        </div>\n    )\n}","import React from 'react'\n\nimport './experiencecard.css';\n\nexport const ExperienceCard = ({ experience }) => {\n    return (\n        <div className=\"experience-card\">\n            <p><b>Company Name:</b> {experience.companyName}</p>\n            <p><b>Role:</b> {experience.role}</p>\n    <p><b>Responsibilitiess:</b> {experience.about.split(\"â€¢\").map(res=>{return <p>{res}</p>})} </p>\n        </div>\n    )\n}","import React from 'react';\n\nimport { ExperienceCard } from '../ExperienceCard/ExperienceCard';\n\n\nexport const Experiences = ({ experiences }) => {\n    return (\n        <div className=\"projects-container\">\n            <div className=\"industry-skill-container\">\n                {\n                    experiences.experienceList.map(experience => <ExperienceCard experience={experience} />)\n                }\n            </div>\n        </div>\n    )\n}","import React from 'react';\n\nimport { About } from './../About/About';\nimport { Skills } from './../Skills/Skills';\nimport { Projects } from './../Projects/Projects';\nimport { Experiences } from '../Experience/Experiences';\n\nimport './section-container.css';\n\nexport const SectionContainer = ({ \n    selectedHeading, \n    selectedQuote,\n    selectedSection,\n    about,\n    skills,\n    projects,\n    experiences\n}) => {\n    return (\n        <div className=\"section-container\">\n            <div className=\"section-heading-container\">\n                <h1 className=\"main-heading\">{selectedHeading}</h1>\n                <p className=\"main-quote\">{selectedQuote}</p>\n            </div>\n            <div className=\"section-component\">\n                {\n                    {\n                        about: <About bio={about.bio} />,\n                        skills: <Skills skills={skills} />,\n                        projects: <Projects projects={projects} />,\n                        experiences:<Experiences experiences={experiences}/>\n                    }[selectedSection]\n                }\n            </div>\n        </div>\n    )\n}","import React from 'react';\n\nimport { SideNav } from './../SideNav/SideNav';\nimport { SectionContainer } from './../SectionContainer/SectionContainer';\n\n\nimport './portfolio.css';\n        \nexport const Portfolio = ({ \n    handleSectionClick,\n    selectedHeading, \n    selectedQuote,\n    selectedSection,\n    about,\n    skills,\n    projects,\n    experiences\n}) => {\n    return (\n        <div className=\"portfolio-container\">\n            <div className=\"sidenav-container\">\n                <SideNav\n                    handleSectionClick={handleSectionClick}\n                />\n            </div>\n            <div className=\"main-section-container\">\n                <SectionContainer\n                    selectedSection={selectedSection}\n\t\t\t\t\tselectedHeading={selectedHeading}\n\t\t\t\t\tselectedQuote={selectedQuote}\n\t\t\t\t\tabout={about}\n\t\t\t\t\tskills={skills}\n\t\t\t\t\tprojects={projects} \n                    experiences={experiences}\n                    />\n            </div>\n        </div>\n    );\n};","export const about = {\n    heading: \"About Me\",\n    \"quote\": \"CS Graduate at San Diego State University| Software Engineer | 4 Years of Industry Experience \",\n    \"bio\": \"A hardworking and motivated individual who has great passion and love for programming. To diversify his Interests in technology and to further his hunger for leaning, Dhiren is currently pursuing his Master's in computer science from San Diego State University and is expected to graduate in May 2021. Prior to this, He has worked with Tata Consultancy Services as a Software Engineer for 4 years where he acquired extensive experience in Java, Spring Framework, ORM tools and also got a chance to exlpore Javascript and it's libraries. His detail oriented approch allows him to write clean and scalable code with a strong emphasis on design patterns\"\n    \n    //\"A cadet by nature and a developer by passion, a tech enthusiast, a full-stack JavaScript developer, tech blogger, self-help blogger, writer, motivator and mentor for those who want to learn programming, development and recent technologies, Madhav has been continuously helping the youth of India to become better at programming. \\n\\nMadhav has a vision to  make each and every individual of this world proficient in at least one programming language (irrespective of that person's background and experience in tech/non-tech).\"\n};","export const skills = {\n    heading: \"Skills\",\n    quote: \"Skills donâ€™t die, only people do\",\n    languages:[\n        \"C++ (Intermediate)\",\n        \"Kotlin (Basic)\",\n        \"Dart (Basic)\",\n        \"Python (Basic)\",\n        \"Java (Expert)\"\n    ],\n    techSkills: [\n        \"Spring Framework (Expert)\",\n        \"Hibernate\",\n        \"HTML\",\n        \"CSS\",\n        \"jQuery\",\n        \"Bootstrap\",\n        \"Material Design\",\n        \"JavaScript\",\n        \"NodeJS\",\n        \"ReactJS\",\n        \"React Native\",\n        \"Redux\",\n        \"Android\",\n        \"Git\",\n        \"GitHub\",\n        \"Docker\",\n        \"MongoDB\",\n        \"PostgreSQL\",\n        \"JIRA\"\n    ],\n    industryKnowledge: [\n        \n        \"Agile Methodologies\",\n        \"CI/CD\",\n        \"Full Stack Web Development\",\n        \"System Design\",\n        \"Technical Documentation\",\n        \"Cross Platform Mobile App Development\",\n        \"Software Development\"\n    ],\n    interpersonalSkills: [\n        \"Communication\",\n        \"Teaching\",\n        \"Time Management\",\n        \"Leadership\",\n        \"Management\"\n    ]\n};","export const projects = {\n    heading: \"Projects\",\n    quote: \"If you have a project to pour your learnings into, you will retain the knowledge.\",\n    projectList: [\n        {\n            name: \"Indian Spices:In-Resturant Food Ordering App\",\n            description: \"Developed an in-restaurant food pickup app in Android which incorporates features like catalog browsing, food cart, payment, order management etc.\",\n            link: \"http://madhavbahl.tech/react-pokedex/\"\n        }, {\n            name: \"Coronavirus Tracker\",\n            description: \"Developed an tracker in Spring Boot to keep a check on counts of COVID-19 cases.\",\n            link: \"http://madhavbahl.tech/react-pokedex/\"\n        }, {\n            name: \"Spreadsheet Application\",\n            description: \"Implemented different design patterns in Java for interpreting expressions, broadcasting and reverting changes to create an excel like application.\",\n            link: \"http://madhavbahl.tech/react-pokedex/\"\n        }, {\n            name: \"Detection and Identification of Vehicles\",\n            description: \"Built an application to classify and count the number of vehicles at a given time on the road from a stable droneâ€™s view/high-rise building.\",\n            link: \"http://madhavbahl.tech/react-pokedex/\"\n        }\n    ]\n}","export const experiences = {\n    heading: \"Experiences\",\n    quote: \"Nothing ever becomes real till it is experienced.\",\n    experienceList: [\n        {\n            companyName: \"Tata Consultancy Services, Pune, India\",\n            role: \"Software Engineer\",\n            about: \"â€¢ Developed REST API based intelligent and customizable Health Check agents in Java which can check health of SAP System and figure out anomalies in a matter of seconds and developed complementary operators which could fix these anomalies. This reduced the MTTR by 80% in Basis Administration area of SAP and was one of the most demonstrated and demanded solutions of the product.{'/n'}\"\n            +\"â€¢ Built a multipurpose SAP Job related API for the product inclusive of monitoring, starting, cancelling and rescheduling jobs on approval basis, proactive notifications were sent ahead of potential issues impacting business SLAâ€™s, bringing down critical job failures by 90%.<br>\"\n            +\"â€¢ Developed a Compliance Check for different modules of SAP which can assess the state of compliance and risk of non-compliance for different parameters at the organization level and industry standards.<br>\"\n            +\"â€¢ Designed and developed evidence dashboards for easy analysis and deep insights, data was represented using statistical graphs, plots and information graphics using D3.JS and google charts.\"\n        }\n    ]\n};","import React, { Component } from 'react';\n\nimport { Portfolio } from './components/Portfolio/Portfolio';\n\nimport { about } from './constants/About';\nimport { skills } from './constants/Skills';\nimport { projects } from './constants/Projects';\nimport { experiences } from './constants/Experiences';\nimport './App.css';\n\nclass App extends Component {\n\tconstructor () {\n\t\tsuper();\n\n\t\tthis.state = {\n\t\t\tselectedSection: \"\",\n\t\t\tselectedHeading: \"\",\n\t\t\tselectedQuote: \"\",\n\t\t\tabout: null,\n\t\t\tskills: null,\n\t\t\tprojects: null,\n\t\t\texperiences:null\n\t\t};\n\t}\n\n\tcomponentWillMount () {\n\t\tthis.setState ({ \n\t\t\tabout,\n\t\t\tskills,\n\t\t\tprojects,\n\t\t\texperiences,\n\t\t\tselectedHeading: about.heading,\n\t\t\tselectedQuote: about.quote,\n\t\t\tselectedSection: \"about\" \n\t\t});\n\t}\n\n\thandleSectionClick =  (section) => {\n\t\n\t\tthis.setState({\n\t\t\tselectedSection: section,\n\t\t\tselectedHeading: this.state[section].heading,\n\t\t\tselectedQuote: this.state[section].quote\n\t\t})\n\t}\n\n\trender () {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<Portfolio\n\t\t\t\t\thandleSectionClick={this.handleSectionClick}\n\t\t\t\t\tselectedSection={this.state.selectedSection}\n\t\t\t\t\tselectedHeading={this.state.selectedHeading}\n\t\t\t\t\tselectedQuote={this.state.selectedQuote}\n\t\t\t\t\tabout={this.state.about}\n\t\t\t\t\tskills={this.state.skills}\n\t\t\t\t\tprojects={this.state.projects}\n\t\t\t\t\texperiences={this.state.experiences}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}